{"version":3,"sources":["views/Settings/Settings.jsx","views/Shotterud/Shotterud.jsx","index.js","App.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","Settings","handleToggle","setOpen","open","Dialog","fullScreen","onClose","TransitionComponent","AppBar","style","position","Toolbar","IconButton","edge","color","onClick","aria-label","Typography","variant","Grid","container","justify","width","containter","padding","item","xs","Slider","value","settings","minMaxSec","valueLabelDisplay","step","marks","min","max","onChange","e","setSettings","TextField","label","type","amtSpinners","target","Shotterud","useState","names","setNames","settingsOpen","setSettingsOpen","Button","ReactDOM","render","document","getElementById"],"mappings":"8SAcMA,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAG9B,SAASI,EAASJ,GAC/B,IAAMK,EAAe,WACnBL,EAAMM,SAASN,EAAMO,OAGvB,OACE,kBAACC,EAAA,EAAD,CACEC,YAAU,EACVF,KAAMP,EAAMO,KACZG,QAASL,EACTM,oBAAqBd,GAErB,kBAACe,EAAA,EAAD,CAAQC,MAAO,CAAEC,SAAU,aACzB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACNC,QAASd,EACTe,aAAW,SAEX,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,cAGJ,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASZ,MAAO,CAAEa,MAAO,SAC/C,kBAACH,EAAA,EAAD,CACEI,YAAU,EACVxB,UAAU,SACVU,MAAO,CAAEe,QAAS,OAAQF,MAAO,YAEjC,kBAACH,EAAA,EAAD,CAAMM,MAAI,EAACC,IAAE,GACX,kBAACT,EAAA,EAAD,+CACA,kBAACU,EAAA,EAAD,CACEC,MAAOhC,EAAMiC,SAASC,UACtBC,kBAAkB,OAClBC,KAAM,GACNC,OAAK,EACLC,IAAK,GACLC,IAAK,GACLC,SAAU,SAACC,EAAGT,GACZhC,EAAM0C,YAAN,eACK1C,EAAMiC,SADX,CAEEC,UAAWF,SAKnB,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASK,IAAE,GACjC,kBAACP,EAAA,EAAD,CAAMM,MAAI,EAAC1B,UAAU,UACnB,kBAACwC,EAAA,EAAD,CACEC,MAAM,qBACNC,KAAK,SACLvB,QAAQ,WACRU,MAAOhC,EAAMiC,SAASa,YACtBN,SAAU,SAAAC,GAAC,OACTzC,EAAM0C,YAAN,eACK1C,EAAMiC,SADX,CAEEa,YACEL,EAAEM,OAAOf,MAAQ,EACb,EACAS,EAAEM,OAAOf,MAAQ,EACjB,EACAS,EAAEM,OAAOf,iBC7EpB,SAASgB,EAAUhD,GAAQ,IAAD,EACbiD,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,OAEPF,mBAAS,CACvCH,YAAa,EACbZ,UAAW,CAAC,GAAI,MAJqB,mBAEhCD,EAFgC,KAEtBS,EAFsB,OAMCO,oBAAS,GANV,mBAMhCG,EANgC,KAMlBC,EANkB,KAQvC,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQhC,QAAQ,WAAWH,QAAS,kBAAMkC,GAAgB,KAA1D,YAGA,kBAACjD,EAAD,CACEG,KAAM6C,EACN9C,QAAS+C,EACTH,MAAOA,EACPC,SAAUA,EACVlB,SAAUA,EACVS,YAAaA,KCnBrBa,IAASC,OAAO,mBCDD,WACb,OAAO,kBAACR,EAAD,QDAO,MAASS,SAASC,eAAe,W","file":"static/js/main.7ba17481.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Dialog,\n  Slide,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Slider,\n  TextField\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Settings(props) {\n  const handleToggle = () => {\n    props.setOpen(!props.open);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={props.open}\n      onClose={handleToggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: \"relative\" }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleToggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\">Settings</Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container justify=\"center\" style={{ width: \"100%\" }}>\n        <Grid\n          containter\n          direction=\"column\"\n          style={{ padding: \"16px\", width: \"inherit\" }}\n        >\n          <Grid item xs>\n            <Typography>Minimum/Maximum time (min) before spin</Typography>\n            <Slider\n              value={props.settings.minMaxSec}\n              valueLabelDisplay=\"auto\"\n              step={0.5}\n              marks\n              min={0.5}\n              max={20}\n              onChange={(e, value) => {\n                props.setSettings({\n                  ...props.settings,\n                  minMaxSec: value\n                });\n              }}\n            />\n          </Grid>\n          <Grid container justify=\"center\" xs>\n            <Grid item direction=\"column\">\n              <TextField\n                label=\"Number of spinners\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={props.settings.amtSpinners}\n                onChange={e =>\n                  props.setSettings({\n                    ...props.settings,\n                    amtSpinners:\n                      e.target.value < 1\n                        ? 1\n                        : e.target.value > 4\n                        ? 4\n                        : e.target.value\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Settings from \"../Settings/Settings\";\n\nexport default function Shotterud(props) {\n  const [names, setNames] = useState([]);\n  const [settings, setSettings] = useState({\n    amtSpinners: 1,\n    minMaxSec: [10, 15]\n  });\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={() => setSettingsOpen(true)}>\n        Settings\n      </Button>\n      <Settings\n        open={settingsOpen}\n        setOpen={setSettingsOpen}\n        names={names}\n        setNames={setNames}\n        settings={settings}\n        setSettings={setSettings}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from \"react\";\nimport Shotterud from \"./views/Shotterud/Shotterud\";\n\nexport default function App() {\n  return <Shotterud />;\n}\n"],"sourceRoot":""}