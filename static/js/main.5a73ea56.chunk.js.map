{"version":3,"sources":["views/Settings/NameChips.jsx","views/Settings/Settings.jsx","views/Shotterud/Spinner.jsx","views/Shotterud/Shotterud.jsx","index.js","App.js"],"names":["EnhancedTable","props","addName","useCallback","newName","document","querySelector","value","length","names","push","name","selected","setNames","filter","mapName","window","sessionStorage","setItem","JSON","stringify","useEffect","addEventListener","event","key","Grid","container","direction","item","Typography","variant","TextField","id","label","Button","onClick","row","justify","map","Chip","toUpperCase","onDelete","handleDelete","color","Transition","React","forwardRef","ref","Slide","Settings","handleToggle","setOpen","open","location","reload","Dialog","fullScreen","onClose","TransitionComponent","AppBar","style","position","Toolbar","IconButton","edge","aria-label","width","padding","xs","Slider","settings","minMaxSec","valueLabelDisplay","step","marks","min","max","onChange","e","setSettings","marginTop","type","amtSpinners","target","Spinner","spin","users","shuffled","loadout","$","nr","insert_times","duration_time","slideToggle","setTimeout","attr","scrollsize","diff","html","css","times","shuffle","i","append","Math","round","floor","random","animate","left","children","each","center","innerWidth","this","offset","text","arr","temp","index","counter","className","textAlign","Shotterud","storedNames","parse","getItem","storedAmtSpinners","storedMinMaxSec","useState","settingsOpen","setSettingsOpen","s","callback","Promise","resolve","start","a","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5a73ea56.chunk.js","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { Chip, Grid, Typography, TextField, Button } from \"@material-ui/core\";\n\nexport default function EnhancedTable(props) {\n  const addName = useCallback(() => {\n    const newName = document.querySelector(\"#inputName\").value;\n    if (newName === \"\" || newName.length > 20) return;\n    props.names.push({ name: newName, selected: false });\n    props.setNames(props.names.filter(mapName => true));\n    document.querySelector(\"#inputName\").value = \"\";\n    window.sessionStorage.setItem(\"names\", JSON.stringify(props.names));\n  }, [props]);\n\n  const handleDelete = name => {\n    props.setNames(props.names.filter(mapName => mapName !== name));\n    window.sessionStorage.setItem(\n      \"names\",\n      JSON.stringify(props.names.filter(mapName => mapName !== name))\n    );\n  };\n\n  useEffect(() => {\n    document.querySelector(\"#inputName\").addEventListener(\n      \"keypress\",\n      function(event) {\n        // Number 13 is the \"Enter\" key on the keyboard\n        if (event.key === \"Enter\") {\n          addName();\n        }\n      },\n      true\n    );\n  }, [addName]);\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item container direction=\"column\">\n        <Typography variant=\"h4\">Add Names</Typography>\n        <Grid>\n          <TextField id=\"inputName\" label=\"Add name\"></TextField>\n          <Button variant=\"outlined\" onClick={addName}>\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container direction row justify=\"center\">\n        {props.names.map(name => (\n          <Chip\n            label={name.name.toUpperCase()}\n            onDelete={() => handleDelete(name)}\n            color=\"primary\"\n          />\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Dialog,\n  Slide,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Slider,\n  TextField\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport NameChips from \"./NameChips\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function Settings(props) {\n  const handleToggle = () => {\n    props.setOpen(!props.open);\n    window.location.reload();\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={props.open}\n      onClose={handleToggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: \"relative\" }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleToggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\">Settings</Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid container justify=\"center\" style={{ width: \"100%\" }}>\n        <Grid\n          container\n          direction=\"column\"\n          style={{ padding: \"16px\", width: \"inherit\" }}\n        >\n          <Grid item xs>\n            <Typography>Minimum/Maximum time (min) before spin</Typography>\n            <Slider\n              value={props.settings.minMaxSec}\n              valueLabelDisplay=\"auto\"\n              step={0.5}\n              marks\n              min={0.5}\n              max={20}\n              onChange={(e, value) => {\n                props.setSettings({\n                  ...props.settings,\n                  minMaxSec: value\n                });\n                window.sessionStorage.setItem(\n                  \"minMaxSec\",\n                  JSON.stringify(props.settings.minMaxSec)\n                );\n              }}\n            />\n          </Grid>\n          <Grid\n            container\n            item\n            justify=\"center\"\n            xs\n            style={{ marginTop: \"16px\" }}\n          >\n            <TextField\n              label=\"Number of spinners\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={props.settings.amtSpinners}\n              onChange={e => {\n                props.setSettings({\n                  ...props.settings,\n                  amtSpinners:\n                    e.target.value < 1\n                      ? 1\n                      : e.target.value > 4\n                      ? 4\n                      : e.target.value\n                });\n                window.sessionStorage.setItem(\n                  \"amtSpinners\",\n                  JSON.stringify(props.settings.amtSpinners)\n                );\n              }}\n            />\n          </Grid>\n          <Grid item xs style={{ marginTop: \"16px\" }}>\n            <NameChips names={props.names} setNames={props.setNames} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useCallback } from \"react\";\nimport $ from \"jquery\";\nimport \"./Spinner.css\";\n\nexport default function Spinner(props) {\n  const spin = useCallback(() => {\n    var users = props.names.map(name => name.name),\n      shuffled = [],\n      loadout = $(\"#loadout\" + props.nr),\n      insert_times = 30,\n      duration_time = 10000;\n\n    if (users.length < 2) {\n      $(\"#msgbox\").slideToggle(100);\n      setTimeout(function() {\n        $(\"#msgbox\").slideToggle(100);\n      }, 3000);\n      return false;\n    }\n    $(\"#roll\" + props.nr).attr(\"disabled\", true);\n    var scrollsize = 0,\n      diff = 0;\n    $(loadout).html(\"\");\n    $(\"#log\" + props.nr).html(\"\");\n    loadout.css(\"left\", \"100%\");\n    if (users.length < 10) {\n      insert_times = 20;\n      duration_time = 5000;\n    } else {\n      insert_times = 10;\n      duration_time = 10000;\n    }\n    for (var times = 0; times < insert_times; times++) {\n      shuffled = users;\n      shuffle(shuffled);\n      for (var i = 0; i < users.length; i++) {\n        loadout.append(\n          '<td><div class=\"roller\"><div>' + shuffled[i] + \"</div></div></td>\"\n        );\n        scrollsize = scrollsize + 192;\n      }\n    }\n\n    diff = Math.round(scrollsize / 2);\n    diff = randomEx(diff - 300, diff + 300);\n    $(\"#loadout\" + props.nr).animate(\n      {\n        left: \"-=\" + diff\n      },\n      duration_time,\n      function() {\n        $(\"#roll\" + props.nr).attr(\"disabled\", false);\n        $(\"#loadout\" + props.nr)\n          .children(\"td\")\n          .each(function() {\n            var center = window.innerWidth / 2;\n            if (\n              $(this).offset().left < center &&\n              $(this).offset().left + 185 > center\n            ) {\n              var text = $(this)\n                .children()\n                .text();\n              $(\"#log\" + props.nr).append(\n                'Skål <span class=\"badge\">' + text + \"!</span>\"\n              );\n            }\n          });\n      }\n    );\n  }, [props.names, props.nr]);\n\n  function randomEx(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  function shuffle(arr) {\n    var counter = arr.length,\n      temp,\n      index;\n    while (counter > 0) {\n      index = (Math.random() * counter--) | 0;\n      temp = arr[counter];\n      arr[counter] = arr[index];\n      arr[index] = temp;\n    }\n  }\n\n  useEffect(() => {\n    spin();\n  }, [spin]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row topbox\">\n        <div className=\"col-md-6 col-md-offset-3 rollbox\">\n          <div className=\"line\"></div>\n          <table>\n            <tr className=\"loadout\" id={\"loadout\" + props.nr}></tr>\n          </table>\n        </div>\n      </div>\n\n      <div className=\"col-md-12\" style={{ textAlign: \"center\" }}>\n        <div className=\"log\" id={\"log\" + props.nr}></div>\n      </div>\n      <button\n        onClick={spin}\n        id={\"roll\" + props.nr}\n        className=\"btn btn-success form-control roll\"\n      >\n        Roll\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button } from \"@material-ui/core\";\nimport Settings from \"../Settings/Settings\";\nimport Spinner from \"./Spinner\";\n\nexport default function Shotterud(props) {\n  var storedNames = JSON.parse(sessionStorage.getItem(\"names\"));\n  var storedAmtSpinners = JSON.parse(sessionStorage.getItem(\"amtSpinners\"));\n  var storedMinMaxSec = JSON.parse(sessionStorage.getItem(\"minMaxSec\"));\n  const [names, setNames] = useState(storedNames !== null ? storedNames : []);\n  const [settings, setSettings] = useState({\n    amtSpinners: storedAmtSpinners !== null ? storedAmtSpinners : 1,\n    minMaxSec: storedMinMaxSec !== null ? storedMinMaxSec : [10, 15]\n  });\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const s = useCallback(\n    callback => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          callback();\n          resolve();\n        }, (Math.random() * (settings.minMaxSec[1] * 60 - settings.minMaxSec[0] * 60) + settings.minMaxSec[0] * 60) * 1000);\n      });\n    },\n    [settings.minMaxSec]\n  );\n\n  const start = useCallback(\n    async function() {\n      while (true) {\n        await s(() => {\n          console.log(\"Halla\");\n          ReactDOM.render(\n            <Spinner names={names} nr={1} />,\n            document.getElementById(\"spinners\")\n          );\n          setTimeout(() => {\n            ReactDOM.render(\"\", document.getElementById(\"spinners\"));\n          }, 25000);\n        });\n      }\n    },\n    [names, s]\n  );\n\n  useEffect(() => {\n    start();\n  }, [start]);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={() => setSettingsOpen(true)}>\n        Settings\n      </Button>\n      <div id=\"spinners\"></div>\n\n      <Settings\n        open={settingsOpen}\n        setOpen={setSettingsOpen}\n        names={names}\n        setNames={setNames}\n        settings={settings}\n        setSettings={setSettings}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from \"react\";\nimport Shotterud from \"./views/Shotterud/Shotterud\";\n\nexport default function App() {\n  return <Shotterud />;\n}\n"],"sourceRoot":""}